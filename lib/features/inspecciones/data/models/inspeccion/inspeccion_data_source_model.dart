import 'package:eos_mobile/features/inspecciones/domain/entities/inspeccion/inspeccion_data_source_entity.dart';

class InspeccionDataSourceModel extends InspeccionDataSourceEntity {
  const InspeccionDataSourceModel({
    required int index,
    required String idInspeccion,
    required String folio,
    required DateTime fecha,
    required String fechaNatural,
    required String idBase,
    required String baseName,
    required String idInspeccionEstatus,
    required String inspeccionEstatusName,
    required String idInspeccionTipo,
    required String inspeccionTipoCodigo,
    required String inspeccionTipoName,
    required bool isValid,
    required bool hasRequerimiento,
    required String idUnidad,
    required String unidadNumeroEconomico,
    required bool isUnidadTemporal,
    required String idUnidadTipo,
    required String unidadTipoName,
    required String locacion,
    required String createdUserName,
    required String createdFechaNatural,
    required String updatedUserName,
    required String updatedFechaNatural,
    String? idRequerimiento,
    String? requerimientoFolio,
    String? idUnidadMarca,
    String? unidadMarcaName,
    String? idUnidadPlacaTipo,
    String? unidadPlacaTipoName,
    String? placa,
    String? numeroSerie,
    String? modelo,
    String? anioEquipo,
  }) : super(
        index                   : index,
        idInspeccion            : idInspeccion,
        folio                   : folio,
        fecha                   : fecha,
        fechaNatural            : fechaNatural,
        idBase                  : idBase,
        baseName                : baseName,
        idInspeccionEstatus     : idInspeccionEstatus,
        inspeccionEstatusName   : inspeccionEstatusName,
        idInspeccionTipo        : idInspeccionTipo,
        inspeccionTipoCodigo    : inspeccionTipoCodigo,
        inspeccionTipoName      : inspeccionTipoName,
        isValid                 : isValid,
        idRequerimiento         : idRequerimiento,
        requerimientoFolio      : requerimientoFolio,
        hasRequerimiento        : hasRequerimiento,
        idUnidad                : idUnidad,
        unidadNumeroEconomico   : unidadNumeroEconomico,
        isUnidadTemporal        : isUnidadTemporal,
        idUnidadTipo            : idUnidadTipo,
        unidadTipoName          : unidadTipoName,
        idUnidadMarca           : idUnidadMarca,
        unidadMarcaName         : unidadMarcaName,
        idUnidadPlacaTipo       : idUnidadPlacaTipo,
        unidadPlacaTipoName     : unidadPlacaTipoName,
        placa                   : placa,
        numeroSerie             : numeroSerie,
        modelo                  : modelo,
        locacion                : locacion,
        anioEquipo              : anioEquipo,
        createdUserName         : createdUserName,
        createdFechaNatural     : createdFechaNatural,
        updatedUserName         : updatedUserName,
        updatedFechaNatural     : updatedFechaNatural,
      );

  /// Constructor factory para crear la instancia de [InspeccionDataSourceModel]
  /// durante el mapeo del JSON.
  factory InspeccionDataSourceModel.fromJson(Map<String, dynamic> jsonMap) {
    return InspeccionDataSourceModel(
      index                   : jsonMap['index'] as int,
      idInspeccion            : jsonMap['idInspeccion'] as String,
      folio                   : jsonMap['folio'] as String,
      fecha                   : DateTime.parse(jsonMap['fecha'] as String),
      fechaNatural            : jsonMap['fechaNatural'] as String,
      idBase                  : jsonMap['idBase'] as String,
      baseName                : jsonMap['baseName'] as String,
      idInspeccionEstatus     : jsonMap['idInspeccionEstatus'] as String,
      inspeccionEstatusName   : jsonMap['inspeccionEstatusName'] as String,
      idInspeccionTipo        : jsonMap['idInspeccionTipo'] as String,
      inspeccionTipoCodigo    : jsonMap['inspeccionTipoCodigo'] as String,
      inspeccionTipoName      : jsonMap['inspeccionTipoName'] as String,
      isValid                 : jsonMap['isValid'] as bool,
      idRequerimiento         : jsonMap['idRequerimiento'] as String? ?? '',
      requerimientoFolio      : jsonMap['requerimientoFolio'] as String? ?? '',
      hasRequerimiento        : jsonMap['hasRequerimiento'] as bool,
      idUnidad                : jsonMap['idUnidad'] as String,
      unidadNumeroEconomico   : jsonMap['unidadNumeroEconomico'] as String,
      isUnidadTemporal        : jsonMap['isUnidadTemporal'] as bool,
      idUnidadTipo            : jsonMap['idUnidadTipo'] as String,
      unidadTipoName          : jsonMap['unidadTipoName'] as String,
      idUnidadMarca           : jsonMap['idUnidadMarca'] as String? ?? '',
      unidadMarcaName         : jsonMap['unidadMarcaName'] as String? ?? '',
      idUnidadPlacaTipo       : jsonMap['idUnidadPlacaTipo'] as String? ?? '',
      unidadPlacaTipoName     : jsonMap['unidadPlacaTipoName'] as String? ?? '',
      placa                   : jsonMap['placa'] as String? ?? '',
      numeroSerie             : jsonMap['numeroSerie'] as String? ?? '',
      modelo                  : jsonMap['modelo'] as String? ?? '',
      locacion                : jsonMap['locacion'] as String,
      anioEquipo              : jsonMap['anioEquipo'] as String? ?? '',
      createdUserName         : jsonMap['createdUserName'] as String,
      createdFechaNatural     : jsonMap['createdFechaNatural'] as String,
      updatedUserName         : jsonMap['updatedUserName'] as String,
      updatedFechaNatural     : jsonMap['updatedFechaNatural'] as String,
    );
  }

  /// Constructor factory para crear la instancia de [InspeccionDataSourceEntity]
  /// en una instancia de [InspeccionDataSourceModel].
  factory InspeccionDataSourceModel.fromEntity(InspeccionDataSourceEntity entity) {
    return InspeccionDataSourceModel(
      index                   : entity.index,
      idInspeccion            : entity.idInspeccion,
      folio                   : entity.folio,
      fecha                   : entity.fecha,
      fechaNatural            : entity.fechaNatural,
      idBase                  : entity.idBase,
      baseName                : entity.baseName,
      idInspeccionEstatus     : entity.idInspeccionEstatus,
      inspeccionEstatusName   : entity.inspeccionEstatusName,
      idInspeccionTipo        : entity.idInspeccionTipo,
      inspeccionTipoCodigo    : entity.inspeccionTipoCodigo,
      inspeccionTipoName      : entity.inspeccionTipoName,
      isValid                 : entity.isValid,
      idRequerimiento         : entity.idRequerimiento,
      requerimientoFolio      : entity.requerimientoFolio,
      hasRequerimiento        : entity.hasRequerimiento,
      idUnidad                : entity.idUnidad,
      unidadNumeroEconomico   : entity.unidadNumeroEconomico,
      isUnidadTemporal        : entity.isUnidadTemporal,
      idUnidadTipo            : entity.idUnidadTipo,
      unidadTipoName          : entity.unidadTipoName,
      idUnidadMarca           : entity.idUnidadMarca,
      unidadMarcaName         : entity.unidadMarcaName,
      idUnidadPlacaTipo       : entity.idUnidadPlacaTipo,
      unidadPlacaTipoName     : entity.unidadPlacaTipoName,
      placa                   : entity.placa,
      numeroSerie             : entity.numeroSerie,
      modelo                  : entity.modelo,
      locacion                : entity.locacion,
      anioEquipo              : entity.anioEquipo,
      createdUserName         : entity.createdUserName,
      createdFechaNatural     : entity.createdFechaNatural,
      updatedUserName         : entity.updatedUserName,
      updatedFechaNatural     : entity.updatedFechaNatural,
    );
  }

  /// Serializaci√≥n de la estructura del modelo a formato JSON.
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'index'                   : index,
      'idInspeccion'            : idInspeccion,
      'folio'                   : folio,
      'fecha'                   : fecha.toIso8601String(),
      'fechaNatural'            : fechaNatural,
      'idBase'                  : idBase,
      'baseName'                : baseName,
      'idInspeccionEstatus'     : idInspeccionEstatus,
      'inspeccionEstatusName'   : inspeccionEstatusName,
      'idInspeccionTipo'        : idInspeccionTipo,
      'inspeccionTipoCodigo'    : inspeccionTipoCodigo,
      'inspeccionTipoName'      : inspeccionTipoName,
      'isValid'                 : isValid,
      'idRequerimiento'         : idRequerimiento,
      'requerimientoFolio'      : requerimientoFolio,
      'hasRequerimiento'        : hasRequerimiento,
      'idUnidad'                : idUnidad,
      'unidadNumeroEconomico'   : unidadNumeroEconomico,
      'isUnidadTemporal'        : isUnidadTemporal,
      'idUnidadTipo'            : idUnidadTipo,
      'unidadTipoName'          : unidadTipoName,
      'idUnidadMarca'           : idUnidadMarca,
      'unidadMarcaName'         : unidadMarcaName,
      'idUnidadPlacaTipo'       : idUnidadPlacaTipo,
      'unidadPlacaTipoName'     : unidadPlacaTipoName,
      'placa'                   : placa,
      'numeroSerie'             : numeroSerie,
      'modelo'                  : modelo,
      'locacion'                : locacion,
      'anioEquipo'              : anioEquipo,
      'createdUserName'         : createdUserName,
      'createdFechaNatural'     : createdFechaNatural,
      'updatedUserName'         : updatedUserName,
      'updatedFechaNatural'     : updatedFechaNatural,
    };
  }
}
